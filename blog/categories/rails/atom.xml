<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Yuichi Takada]]></title>
  <link href="http://takady.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://takady.github.io/"/>
  <updated>2014-11-22T15:03:22+09:00</updated>
  <id>http://takady.github.io/</id>
  <author>
    <name><![CDATA[Yuichi Takada]]></name>
    <email><![CDATA[takadyuichi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[railsで、複数の出力先にlogを出力する]]></title>
    <link href="http://takady.github.io/blog/2014/11/21/rails-logger-broadcast/"/>
    <updated>2014-11-21T18:57:07+09:00</updated>
    <id>http://takady.github.io/blog/2014/11/21/rails-logger-broadcast</id>
    <content type="html"><![CDATA[<p>railsアプリケーションで、error以上のレベルのログだけ、２箇所にログを出力したいと思った。</p>

<h1>前提</h1>

<p>ruby 2.1.2<br/>
rails 4.1.4</p>

<h1>方法</h1>

<p>まず、複数の出力先にロギングするには、<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/logger.rb#L10-L42">ActiveSupport::Logger.#broadcast</a>というメソッドが使える。<br/>
config/application.rbのMyapp::Applicationクラス内に下記のように書いてみた。</p>

<pre><code class="ruby">logger = ActiveSupport::Logger.new(config.paths["log"].first)
error_logger = ActiveSupport::Logger.new("log/error.log")
error_logger.level = Logger::ERROR
logger.extend ActiveSupport::Logger.broadcast(error_logger)
config.logger = logger
</code></pre>

<p>これで、複数箇所にログが出力されるようにはなった。<br/>
しかし、今回やりたかったのは、<strong>ERROR以上の時だけ</strong>２箇所にロギングしたいというもので、上記のようにconfig/application.rbでextendした場合、error_loggerのlevelをERRORにセットしていても、Rails.loggerのlevelと同じlevelでのloggingになってしまう。<br/>
全く同じエラーログを複数箇所に吐かせたいというだけであれば、上記の方法で良いと思う。(その際、上記の<code>error_logger.level = Logger::ERROR</code>は意味が無いので消した方が良い)</p>

<p>error_logger.levelの指定が効くようにするには、<code>run Rails.application</code>よりも後で、error_loggerをRails.loggerにextendすると良い。<br/>
config.ruに下記を追記する。</p>

<pre><code class="ruby">run Rails.application

error_logger = ActiveSupport::Logger.new("log/error.log")
error_logger.level = Logger::ERROR
Rails.logger.extend ActiveSupport::Logger.broadcast(error_logger)
</code></pre>

<p>これで、log/error.logへは、ERRORレベル以上のログだけが出力されるようになった。<br/>
もちろん、log/development.logには、これまでどおりDEBUGレベルまで含めた全てのlogが出ている。</p>

<h1>参考</h1>

<p><a href="http://blog.livedoor.jp/sonots/archives/38927788.html">[Ruby] 例えば、Rails の標準ログを止める - sonots:blog</a><br/>
<a href="http://railsdoc.eiel.info/active_support/logger/">RailsDoc - ActiveSupport::Logger</a><br/>
<a href="http://mitsu877.hatenablog.com/entry/2014/11/15/193547">【Rails】バッチの実行ログを専用のログファイルと標準出力の両方に出す - おどるダメ人間</a></p>
]]></content>
  </entry>
  
</feed>
